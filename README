# Airgead Banking - Project Two

**Overview:** For this journal assignment, you will make a submission to your portfolio.

### Questions <> Responses:

1. Summarize the project and what problem it was solving.

   - The goal here was to create a C++ program that will allow users to see how much their investments are growing providing them with a user interface where they can submit data like Monthly Deposit, Annual interest, etc.

   ***

2. What did you do particularly well?

   - I believe I did a great job at writing notes down about how to approach solving the problem first. I know this was mentioned in 1a and I just say this because I tend to hop right into an editor and start typing away, sometimes not fully understanding the task at hand. When I brought up the assignment rubric I wrote out with pen and paper how the flow of the program will work. This was really helpful.

   ***

3. Where could you enhance your code? How would these improvements make your code more efficient, secure, and so on?

   - Once way I would enhance my code would be to explore some c++ testing frameworks. One in particular I would try first is [Catch2.](https://github.com/catchorg/Catch2) I would also like to get into a habit of leaving better comments.

   ***

4. Which pieces of the code did you find most challenging to write, and how did you overcome this? What tools or resources are you adding to your support network?

   - In this particular project it wasn't necessarily the logic of the program, I would have to say it was the project configuration and at times misunderstanding the C++ syntax. Tool's that really helped be get past roadblocks were Github, Stackoverflow, C++ Syntax guide docs.

   ***

5. What skills from this project will be particularly transferable to other projects or course work?

   - I've always wanted to create a video game or embedded system but was too nervous to face a lower level language, the course has opened my mind to exploring different realms. Also, I got to experience a different editor (VS Studio) which I found to be tricky but indeed powerful.

   ***

6. How did you make this program maintainable, readable, and adaptable?
   - My plan was to follow style guide procedures, I normally use Linters like Eslint, Prettier etc. when creating website. This time around I took a moment to review [this helpful document.](https://google.github.io/styleguide/cppguide.html)
   ***
